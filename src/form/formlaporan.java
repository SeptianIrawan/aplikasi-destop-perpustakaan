/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import Koneksi.KoneksiDB;
import com.toedter.calendar.JDateChooser;
import java.awt.Desktop;
import java.awt.print.PrinterException;
import static java.lang.String.format;
import java.net.URI;
import java.text.MessageFormat;
import javax.swing.table.DefaultTableModel;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.Date;
import javax.swing.JScrollPane;
/**
 *
 * @author oc
 */
public class formlaporan extends javax.swing.JFrame {
 public Connection con;
    public Statement stat;
    public ResultSet rs;
    public String sql, tgl="";
    /**
     * Creates new form formlaporan
     */
    public formlaporan() {
         initComponents();
        setLocationRelativeTo(null);
        KoneksiDB db = new KoneksiDB();
        db.koneksiperpus();
        con=db.con;
        stat=db.stat;
        rs=db.rs;
        
        
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 204));
        jPanel1.setForeground(new java.awt.Color(0, 0, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SISTEM INFORMASI PERPUSTAKAAN");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("UNIVERSITAS LANCANG KUNING");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, -1, -1));

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/favicon.png"))); // NOI18N
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 48));

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setText("KEMBALI");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 40, -1, 40));

        jPanel2.setBackground(new java.awt.Color(255, 193, 7));

        jButton6.setBackground(new java.awt.Color(0, 0, 153));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Support us  ❤❤️️");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addGap(357, 357, 357))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addGap(36, 36, 36))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setBackground(new java.awt.Color(0, 159, 189));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("ANGGOTA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 122, 127, 114));

        jButton4.setBackground(new java.awt.Color(240, 148, 49));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("BUKU");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, 127, 114));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("LAPORAN");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        jButton8.setBackground(new java.awt.Color(0, 102, 0));
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("PENGEMBALIAN");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 120, 127, 114));

        jButton9.setBackground(new java.awt.Color(0, 0, 204));
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("PEMINJAMAN");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 120, 127, 114));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 820, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 610, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            // URL tujuan
            URI uri = new URI("https://saweria.co/septianirawan2501");

            // Memeriksa apakah desktop mendukung fungsi browse
            if (Desktop.isDesktopSupported() && Desktop.getDesktop().isSupported(Desktop.Action.BROWSE)) {
                Desktop.getDesktop().browse(uri);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
               StringBuilder dataAnggota = new StringBuilder();

        // Menambahkan Kop Laporan di bagian atas
        dataAnggota.append("                                                            PERPUSTAKAAN LANCANG KUNING\n");
        dataAnggota.append("                                                        Jl. Pendidikan No.1, Pekanbaru, Riau\n");
        dataAnggota.append("                                                            Telepon: (0761) 123456789\n");
        dataAnggota.append("=============================================================================================================================================================\n");

        // Menambahkan header kolom
        dataAnggota.append(String.format("%-12s %-20s %-10s %-19s %-20s %-9s %-12s %-25s %-15s %-10s\n", 
            "ID Anggota", "Nama", "Kelas", "Jurusan", "Alamat", "JK", "Tgl Lahir", "Email", "No Hp", "Agama"));
        dataAnggota.append("-------------------------------------------------------------------------------------------------------------------------------------------------------------\n");

        try {
            // Mengambil data dari database
            String sql = "SELECT * FROM tbanggota";
            Statement stat = con.createStatement();
            ResultSet rs = stat.executeQuery(sql);

            while (rs.next()) {
                // Mengambil data dari database
                String idAnggota = rs.getString("idanggota");
                String nama = rs.getString("nama");
                String kelas = rs.getString("kelas");
                String jurusan = rs.getString("jurusan");
                String alamat = rs.getString("alamat");
                String jk = rs.getString("jeniskelamin");
                String tglLahir = rs.getDate("tanggallahir").toString();
                String email = rs.getString("email");
                String noHp = rs.getString("no_telepon");
                String agama = rs.getString("agama");

                // Menambahkan data ke StringBuilder
                dataAnggota.append(String.format("%-12s %-20s %-10s %-19s %-20s %-4s %-12s %-25s %-15s %-10s\n",
                    idAnggota, nama, kelas, jurusan, alamat, jk, tglLahir, email, noHp, agama));

                // Memindahkan teks panjang ke baris berikutnya jika kolom terlalu panjang
                if (nama.length() > 20) {
                    dataAnggota.append(String.format("%-15s %-20s\n", "", nama.substring(20))); 
                }
                if (alamat.length() > 20) {
                    dataAnggota.append(String.format("%-15s %-20s\n", "", alamat.substring(20)));
                }
                if (email.length() > 25) {
                    dataAnggota.append(String.format("%-15s %-25s\n", "", email.substring(25)));
                }
            }
            dataAnggota.append("\n\n\n\n");
            dataAnggota.append("                                                                                                             Pekanbaru, " + java.time.LocalDate.now() + "\n\n");
            dataAnggota.append("                                                                                                               Pimpinan Perpustakaan\n\n\n\n");
            dataAnggota.append("                                                                                                           -----------------------------\n");
            dataAnggota.append("                                                                                                                   (Septian Irawan)\n");

            // Membuat instance dari cetakanggota
            cetakanggota formCetakAnggota = new cetakanggota();
            formCetakAnggota.setVisible(true);

            // Menampilkan data di JTextArea pada form cetakanggota
            formCetakAnggota.getTextAreaCetakBuku().setText(dataAnggota.toString());

            // Mengatur warna latar belakang dan teks
            formCetakAnggota.getTextAreaCetakBuku().setBackground(new java.awt.Color(176, 190, 197)); // Latar belakang abu-abu terang
            formCetakAnggota.getTextAreaCetakBuku().setForeground(new java.awt.Color(51, 51, 51)); // Teks hitam
            formCetakAnggota.getTextAreaCetakBuku().setFont(new java.awt.Font("Monospaced", java.awt.Font.PLAIN, 12)); // Font monospaced

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
           StringBuilder dataBuku = new StringBuilder();

       // Menambahkan Kop Laporan di bagian atas
       dataBuku.append("                                                PERPUSTAKAAN LANCANG KUNING\n");
       dataBuku.append("                                           Jl. Pendidikan No.1, Pekanbaru, Riau\n");
       dataBuku.append("                                                  Telepon: (0761) 123456789\n");
       dataBuku.append("===============================================================================================================================\n");

       // Menambahkan header tabel
       dataBuku.append(String.format("%-8s %-29s %-21s %-14s %-7s %-4s %-6s %-3s %-8s %-6s\n", 
           "ID Buku", "Judul", "Pengarang", "Penerbit", "Halaman", "No Rak", "Kategori", "Jumlah", "Status", "Tgl Terbit"));
       dataBuku.append("-------------------------------------------------------------------------------------------------------------------------------\n");

       // Mengambil data buku dari database dan menambahkannya ke `StringBuilder`
       try {
           String sql = "SELECT * FROM tbbuku";
           stat = con.createStatement();
           rs = stat.executeQuery(sql);

           while (rs.next()) {
               String idBuku = rs.getString("idbuku");
               String judul = rs.getString("judul");
               String pengarang = rs.getString("pengarang");
               String penerbit = rs.getString("penerbit");
               String halaman = rs.getString("jumlahhalaman");
               String noRak = rs.getString("nomorrak");
               String kategori = rs.getString("kategori");
               String jumlah = rs.getString("jumlah");
               String status = rs.getString("status");
               String tglTerbit = rs.getDate("tanggalterbit").toString();

               dataBuku.append(String.format("%-8s %-29s %-21s %-15s %-7s %-4s %-10s %-4s %-9s %-6s\n",
                   idBuku, judul, pengarang, penerbit, halaman, noRak, kategori, jumlah, status, tglTerbit));
           }

           // Tambahkan tanda tangan di bagian bawah
           dataBuku.append("\n\n\n\n");
           dataBuku.append("                                                                                                             Pekanbaru, " + java.time.LocalDate.now() + "\n\n");
           dataBuku.append("                                                                                                               Pimpinan Perpustakaan\n\n\n\n");
           dataBuku.append("                                                                                                           -----------------------------\n");
           dataBuku.append("                                                                                                                   (Septian Irawan)\n");

           // Membuat instance dari cetakanggota
           cetakbuku formCetak = new cetakbuku();
           formCetak.setVisible(true);

           // Menampilkan data di JTextArea pada form cetakanggota
           formCetak.getTextAreaCetakBuku().setText(dataBuku.toString());

           // Mengatur warna latar belakang dan teks
           formCetak.getTextAreaCetakBuku().setBackground(new java.awt.Color(176, 190, 197)); // Latar belakang abu-abu terang
           formCetak.getTextAreaCetakBuku().setForeground(new java.awt.Color(51, 51, 51)); // Teks hitam
           formCetak.getTextAreaCetakBuku().setFont(new java.awt.Font("Monospaced", java.awt.Font.PLAIN, 12)); // Font monospaced


       } catch (Exception e) {
           JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
       }

      // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        StringBuilder dataPeminjam = new StringBuilder();

        // Menambahkan Kop Laporan di bagian atas
        dataPeminjam.append("                                      PERPUSTAKAAN LANCANG KUNING\n");
        dataPeminjam.append("                                  Jl. Pendidikan No.1, Pekanbaru, Riau\n");
        dataPeminjam.append("                                      Telepon: (0761) 123456789\n");
        dataPeminjam.append("===============================================================================================================\n");

        // Menambahkan header kolom
        dataPeminjam.append(String.format("%-9s %-16s %-25s %-11s %-14s %-12s %-12s %-8s %-15s\n",
            "Nomor", "Nama", "Buku", "Nomor Rak", "Mulai Pinjam", "Akhir Pinjam", "Lama Pinjam", "Harga", "Denda"));
    dataPeminjam.append("----------------------------------------------------------------------------------------------------------------\n");

    try {
    // Mengambil data dari database
    String sql = "SELECT * FROM tbpengembalian";
    Statement stat = con.createStatement();
    ResultSet rs = stat.executeQuery(sql);

    LocalDate today = LocalDate.now(); // Tanggal hari ini

    while (rs.next()) {
        // Mengambil data dari database
        String kode = rs.getString("idpengembalian");
        String nama = rs.getString("nama");
        String buku = rs.getString("buku");
        String nomorRak = rs.getString("nomorrak");
        String mulaiPinjam = rs.getDate("mulaipinjam").toString();
        String akhirPinjam = rs.getDate("akhirpinjam").toString();
        String lamaPinjam = rs.getString("lamapinjam");
        String harga = rs.getString("harga");
        long denda = rs.getLong("denda"); // Denda dari database

      

        // Menambahkan data ke StringBuilder dengan pemindahan teks panjang ke baris berikutnya jika diperlukan
        dataPeminjam.append(String.format("%-7s %-15s %-25s %-11s %-13s %-14s %-11s %-8s %-15s\n",
          kode, nama, buku, nomorRak, mulaiPinjam, akhirPinjam, lamaPinjam, harga, denda));

        // Memindahkan teks panjang ke baris berikutnya jika kolom terlalu panjang
        if (kode.length() > 12) {
            dataPeminjam.append(String.format("%-7s\n", kode.substring(12)));
        }
        if (nama.length() > 20) {
            dataPeminjam.append(String.format("%-32s %-15s\n", "", nama.substring(20)));
        }
        if (buku.length() > 20) {
            dataPeminjam.append(String.format("%-44s %-15s\n", "", buku.substring(20)));
        }
        if (nomorRak.length() > 19) {
            dataPeminjam.append(String.format("%-54s %-13s\n", "", nomorRak.substring(19)));
        }
        if (mulaiPinjam.length() > 20) {
            dataPeminjam.append(String.format("%-73s %-20s\n", "", mulaiPinjam.substring(20)));
        }
        if (akhirPinjam.length() > 12) {
            dataPeminjam.append(String.format("%-93s %-12s\n", "", akhirPinjam.substring(12)));
        }
        if (lamaPinjam.length() > 12) {
            dataPeminjam.append(String.format("%-105s %-12s\n", "", lamaPinjam.substring(12)));
        }
        if (harga != null && harga.length() > 20) {
            dataPeminjam.append(String.format("%-117s %-20s\n", "", harga.substring(20)));
        }
                // Convert denda to String for substring operation
        String dendaString = String.valueOf(denda); // Convert long to String

        if (dendaString.length() > 15) {
            dataPeminjam.append(String.format("%-137s %-15s\n", "", dendaString.substring(15)));
        }

        }
        dataPeminjam.append("\n\n\n\n");
        dataPeminjam.append("                                                                                Pekanbaru, " + java.time.LocalDate.now() + "\n\n");
        dataPeminjam.append("                                                                              Pimpinan Perpustakaan\n\n\n\n");
        dataPeminjam.append("                                                                              -----------------------\n");
        dataPeminjam.append("                                                                                (Septian Irawan)\n");

        // Membuat instance dari cetakpeminjam
        cetakpeminjam formCetakPeminjam = new cetakpeminjam();
        formCetakPeminjam.setVisible(true);

        // Menampilkan data di JTextArea pada form cetakpeminjam
        formCetakPeminjam.getTextAreaCetakPeminjam().setText(dataPeminjam.toString());

        // Mengatur warna latar belakang dan teks
        formCetakPeminjam.getTextAreaCetakPeminjam().setBackground(new java.awt.Color(176, 190, 197)); // Latar belakang abu-abu terang
        formCetakPeminjam.getTextAreaCetakPeminjam().setForeground(new java.awt.Color(51, 51, 51)); // Teks hitam
        formCetakPeminjam.getTextAreaCetakPeminjam().setFont(new java.awt.Font("Monospaced", java.awt.Font.PLAIN, 12)); // Font monospaced

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
           // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
                StringBuilder dataPeminjam = new StringBuilder();

        // Menambahkan Kop Laporan di bagian atas
        dataPeminjam.append("                                      PERPUSTAKAAN LANCANG KUNING\n");
        dataPeminjam.append("                                  Jl. Pendidikan No.1, Pekanbaru, Riau\n");
        dataPeminjam.append("                                      Telepon: (0761) 123456789\n");
        dataPeminjam.append("===============================================================================================================\n");

        // Menambahkan header kolom
        dataPeminjam.append(String.format("%-9s %-16s %-14s %-9s %-14s %-12s %-12s %-8s %-15s\n",
            "Kode", "Nama", "Buku", "Nomor Rak", "Mulai Pinjam", "Akhir Pinjam", "Lama Pinjam", "Harga", "Denda"));
    dataPeminjam.append("----------------------------------------------------------------------------------------------------------------\n");

    try {
    // Mengambil data dari database
    String sql = "SELECT * FROM tbpeminjam";
    Statement stat = con.createStatement();
    ResultSet rs = stat.executeQuery(sql);

    LocalDate today = LocalDate.now(); // Tanggal hari ini

    while (rs.next()) {
        // Mengambil data dari database
        String kode = rs.getString("kodepinjam");
        String nama = rs.getString("nama");
        String buku = rs.getString("buku");
        String nomorRak = rs.getString("nomorrak");
        String mulaiPinjam = rs.getDate("mulaipinjam").toString();
        String akhirPinjam = rs.getDate("akhirpinjam").toString();
        String lamaPinjam = rs.getString("lamapinjam");
        String harga = rs.getString("harga");
        long denda = rs.getLong("denda"); // Denda dari database

        // Ambil tanggal 'Akhir Pinjam' dari database dan hitung denda jika diperlukan
        java.sql.Date akhirPinjamDate = rs.getDate("akhirpinjam");
        LocalDate akhirPinjamDateLocal = akhirPinjamDate.toLocalDate();

        // Jika denda di database adalah 0, hitung denda berdasarkan keterlambatan
        if (denda == 0 && akhirPinjamDateLocal.isBefore(today)) {
            long daysLate = ChronoUnit.DAYS.between(akhirPinjamDateLocal, today); // Hitung hari keterlambatan
            denda = daysLate * 2500; // Tarif denda 2500 per hari
        }

        // Menambahkan data ke StringBuilder dengan pemindahan teks panjang ke baris berikutnya jika diperlukan
        dataPeminjam.append(String.format("%-7s %-15s %-15s %-9s %-13s %-14s %-11s %-8s %-15s\n",
          kode, nama, buku, nomorRak, mulaiPinjam, akhirPinjam, lamaPinjam, harga, denda));

        // Memindahkan teks panjang ke baris berikutnya jika kolom terlalu panjang
        if (kode.length() > 12) {
            dataPeminjam.append(String.format("%-7s\n", kode.substring(12)));
        }
        if (nama.length() > 20) {
            dataPeminjam.append(String.format("%-32s %-15s\n", "", nama.substring(20)));
        }
        if (buku.length() > 20) {
            dataPeminjam.append(String.format("%-44s %-15s\n", "", buku.substring(20)));
        }
        if (nomorRak.length() > 19) {
            dataPeminjam.append(String.format("%-54s %-13s\n", "", nomorRak.substring(19)));
        }
        if (mulaiPinjam.length() > 20) {
            dataPeminjam.append(String.format("%-73s %-20s\n", "", mulaiPinjam.substring(20)));
        }
        if (akhirPinjam.length() > 12) {
            dataPeminjam.append(String.format("%-93s %-12s\n", "", akhirPinjam.substring(12)));
        }
        if (lamaPinjam.length() > 12) {
            dataPeminjam.append(String.format("%-105s %-12s\n", "", lamaPinjam.substring(12)));
        }
        if (harga != null && harga.length() > 20) {
            dataPeminjam.append(String.format("%-117s %-20s\n", "", harga.substring(20)));
        }
                // Convert denda to String for substring operation
        String dendaString = String.valueOf(denda); // Convert long to String

        if (dendaString.length() > 15) {
            dataPeminjam.append(String.format("%-137s %-15s\n", "", dendaString.substring(15)));
        }

        }
        dataPeminjam.append("\n\n\n\n");
        dataPeminjam.append("                                                                                Pekanbaru, " + java.time.LocalDate.now() + "\n\n");
        dataPeminjam.append("                                                                              Pimpinan Perpustakaan\n\n\n\n");
        dataPeminjam.append("                                                                              -----------------------\n");
        dataPeminjam.append("                                                                                (Septian Irawan)\n");

        // Membuat instance dari cetakpeminjam
        cetakpeminjam formCetakPeminjam = new cetakpeminjam();
        formCetakPeminjam.setVisible(true);

        // Menampilkan data di JTextArea pada form cetakpeminjam
        formCetakPeminjam.getTextAreaCetakPeminjam().setText(dataPeminjam.toString());

        // Mengatur warna latar belakang dan teks
        formCetakPeminjam.getTextAreaCetakPeminjam().setBackground(new java.awt.Color(176, 190, 197)); // Latar belakang abu-abu terang
        formCetakPeminjam.getTextAreaCetakPeminjam().setForeground(new java.awt.Color(51, 51, 51)); // Teks hitam
        formCetakPeminjam.getTextAreaCetakPeminjam().setFont(new java.awt.Font("Monospaced", java.awt.Font.PLAIN, 12)); // Font monospaced

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
           // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        Dashboard pindah = new Dashboard();

       
        pindah.setVisible(true);

       
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formlaporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formlaporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formlaporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formlaporan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formlaporan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
}
