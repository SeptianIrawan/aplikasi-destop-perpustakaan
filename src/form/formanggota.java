/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import Koneksi.KoneksiDB;
import com.toedter.calendar.JDateChooser;
import java.awt.Image;
import java.io.File;
import static java.lang.String.format;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import javax.swing.table.DefaultTableModel;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JScrollPane;
import java.sql.PreparedStatement;
/**
 *
 * @author oc
 */
public class formanggota extends javax.swing.JFrame {
    public Connection con;
    public Statement stat;
    public ResultSet rs;
    public String sql, tgl="";
    /**
     * Creates new form formanggota
     */
    public formanggota() {
        initComponents();
        setLocationRelativeTo(null);
        KoneksiDB db = new KoneksiDB();
        db.koneksiperpus();
        con=db.con;
        stat=db.stat;
        rs=db.rs;
        
        TIDANGGOTA.setEnabled(false);
        tampildataanggota();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        TIDANGGOTA = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        TNAMA = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        TALAMAT = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        CAGAMA = new javax.swing.JComboBox<>();
        CKELAS = new javax.swing.JComboBox<>();
        CJURUSAN = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        tpencarian = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        curutkan = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        ttampil = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        CJENISKELAMIN = new javax.swing.JComboBox<>();
        TEMAIL = new javax.swing.JTextField();
        TNOMORHP = new javax.swing.JTextField();
        labeltampil = new javax.swing.JLabel();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(868, 679));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DATA ANGGOTA");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, -1, -1));

        jTable1.setBackground(new java.awt.Color(3, 169, 244));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 740, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("FORM ANGGOTA");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        TIDANGGOTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TIDANGGOTAActionPerformed(evt);
            }
        });
        TIDANGGOTA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TIDANGGOTAKeyPressed(evt);
            }
        });
        getContentPane().add(TIDANGGOTA, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 160, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ID ANGGOTA");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 120, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("NAMA");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 120, -1));

        TNAMA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TNAMAActionPerformed(evt);
            }
        });
        getContentPane().add(TNAMA, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 160, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("KELAS");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 120, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("JURUSAN");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 120, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("ALAMAT");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 120, -1));

        TALAMAT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TALAMATActionPerformed(evt);
            }
        });
        getContentPane().add(TALAMAT, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 160, 30));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("NOMOR HP");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 490, 120, -1));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("AGAMA");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 520, 120, -1));

        CAGAMA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PILIH", "ISLAM", "KRISTEN", "HINDU", "BUDHA", "KONGHUCU" }));
        getContentPane().add(CAGAMA, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 520, 160, -1));

        CKELAS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PILIH", "KELAS 31", "KELAS 32", "KELAS 33" }));
        getContentPane().add(CKELAS, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 160, -1));

        CJURUSAN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PILIH", "SISTEM INFROMASI", "TEKNIK INFORMATIKA", "BISNIS DIGITAL" }));
        getContentPane().add(CJURUSAN, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 160, -1));

        jButton1.setBackground(new java.awt.Color(3, 169, 244));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("UPDATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 560, -1, 60));

        jButton4.setBackground(new java.awt.Color(76, 175, 80));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("SAVE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 560, 70, 60));

        jButton9.setBackground(new java.awt.Color(240, 215, 140));
        jButton9.setForeground(new java.awt.Color(51, 51, 51));
        jButton9.setText("CENCEL");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 560, -1, 60));

        jButton2.setBackground(new java.awt.Color(211, 47, 47));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("DELETE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 560, -1, 60));
        getContentPane().add(tpencarian, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 80, 210, -1));

        jButton6.setBackground(new java.awt.Color(3, 169, 244));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("CARI");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 80, 70, -1));

        jButton5.setBackground(java.awt.Color.lightGray);
        jButton5.setText("URUTKAN");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 80, 90, -1));

        curutkan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "URUTKAN BERDASARKAN", "TERBARU", "TERLAMA", "HURUF (A-Z)", "ANGKA (1-10)" }));
        getContentPane().add(curutkan, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 210, -1));

        jPanel5.setBackground(new java.awt.Color(255, 193, 7));
        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 760, 490));

        jPanel1.setBackground(new java.awt.Color(0, 51, 204));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 1050, 60));

        jPanel4.setBackground(new java.awt.Color(0, 51, 204));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton7.setBackground(new java.awt.Color(130, 126, 126));
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("BACK");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 10, -1, 60));

        jButton3.setBackground(new java.awt.Color(176, 190, 197));
        jButton3.setForeground(javax.swing.UIManager.getDefaults().getColor("Actions.Yellow"));
        jButton3.setText("CLEAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 10, 90, 60));

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 550, 1050, 90));

        jLabel16.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("FOTO");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, -1));

        jPanel2.setBackground(new java.awt.Color(3, 169, 244));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("EMAIL");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 520, 120, -1));

        jButton8.setText("FILE");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 430, 60, -1));
        jPanel2.add(ttampil, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 430, 100, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("JENIS KELAMIN");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, 130, -1));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("TANGGAL LAHIR");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 490, 120, -1));

        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });
        jPanel2.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 490, 160, -1));

        CJENISKELAMIN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PILIH", "LAKI LAKI", "PEREMPUAN" }));
        jPanel2.add(CJENISKELAMIN, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 460, 160, -1));

        TEMAIL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TEMAILActionPerformed(evt);
            }
        });
        jPanel2.add(TEMAIL, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 520, 160, 30));

        TNOMORHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TNOMORHPActionPerformed(evt);
            }
        });
        jPanel2.add(TNOMORHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 550, 160, -1));
        jPanel2.add(labeltampil, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 300, 110, 120));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -60, 280, 620));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TIDANGGOTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TIDANGGOTAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TIDANGGOTAActionPerformed

    private void TNAMAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TNAMAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TNAMAActionPerformed

    private void TALAMATActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TALAMATActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TALAMATActionPerformed

    private void TEMAILActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TEMAILActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TEMAILActionPerformed

    private void TNOMORHPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TNOMORHPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TNOMORHPActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
int row = jTable1.getSelectedRow();

if (row != -1) {
    String idAnggota = jTable1.getValueAt(row, 0).toString();

    try {
        // Validasi input
        if (TNAMA.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nama tidak boleh kosong.");
            return;
        }
        if (jDateChooser1.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Tanggal lahir harus dipilih.");
            return;
        }

        // Format tanggal lahir
        String tanggalLahir = new SimpleDateFormat("yyyy-MM-dd").format(jDateChooser1.getDate());

     
    // Pastikan folder tujuan ada
//    File folder = new File("img");
//    if (!folder.exists()) {
//        folder.mkdir(); // Membuat folder jika belum ada
//    }
//
//    // Menyimpan foto ke folder 'img'
//    String fotoPath = ttampil.getText(); // Asumsi ttampil adalah JTextField yang menampilkan path file foto
//    if (fotoPath != null && !fotoPath.isEmpty()) {
//        // Tentukan path file sumber dan tujuan
//        File sourceFile = new File(fotoPath);
//        if (sourceFile.exists()) {
//            String fileName = sourceFile.getName(); // Mengambil nama file dari path
//            File destination = new File(folder, fileName);
//
//            // Salin file foto ke folder 'img'
//            Files.copy(sourceFile.toPath(), destination.toPath(), StandardCopyOption.REPLACE_EXISTING);
//
//            // Path foto baru yang akan disimpan di database
//            fotoPath = destination.getAbsolutePath(); // Menyimpan path lengkap ke database
//        } else {
//            JOptionPane.showMessageDialog(null, "File gambar tidak ditemukan: " + fotoPath);
//            return;
//        }
//    }

   
        // SQL Query untuk update data anggota
        String sql = "UPDATE tbanggota SET " +
                     "nama = ?, kelas = ?, jurusan = ?, alamat = ?, " +
                     "jeniskelamin = ?, tanggallahir = ?, agama = ?, email = ?, " +
                     "no_telepon = ?, foto = ? " +
                     "WHERE idanggota = ?";

        // Buat PreparedStatement
        PreparedStatement stat = con.prepareStatement(sql);

        // Atur parameter
        stat.setString(1, TNAMA.getText()); // Nama
        stat.setString(2, CKELAS.getSelectedItem().toString()); // Kelas
        stat.setString(3, CJURUSAN.getSelectedItem().toString()); // Jurusan
        stat.setString(4, TALAMAT.getText()); // Alamat
        stat.setString(5, CJENISKELAMIN.getSelectedItem().toString()); // Jenis Kelamin
        stat.setString(6, tanggalLahir); // Tanggal Lahir
        stat.setString(7, CAGAMA.getSelectedItem().toString()); // Agama
        stat.setString(8, TEMAIL.getText()); // Email
        stat.setString(9, TNOMORHP.getText()); // Nomor Telepon
        stat.setString(10, ttampil.getText()); // Path Foto
        stat.setString(11, idAnggota); // ID Anggota

        // Eksekusi query
        int rowsUpdated = stat.executeUpdate();
        if (rowsUpdated > 0) {
            JOptionPane.showMessageDialog(rootPane, "Data anggota telah diperbarui.");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Tidak ada perubahan pada data.");
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(rootPane, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }

    tampildataanggota(); // Memperbarui tampilan data anggota
} else {
    JOptionPane.showMessageDialog(this, "Silakan pilih anggota yang ingin diperbarui.", "Peringatan", JOptionPane.WARNING_MESSAGE);
}

bersih(); // Reset form input

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       try {
    // Validasi input
    if (TNAMA.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Nama tidak boleh kosong.");
        return;
    }
    if (jDateChooser1.getDate() == null) {
        JOptionPane.showMessageDialog(null, "Tanggal lahir harus dipilih.");
        return;
    }

    // Format tanggal lahir
    String tgl = new SimpleDateFormat("yyyy-MM-dd").format(jDateChooser1.getDate());

    // Menyimpan foto ke folder 'img' dalam proyek jika foto dipilih
//    String fotoPath = ttampil.getText(); // Asumsi ttampil adalah JTextField yang menampilkan path file foto
//    String savedFotoPath = null; // Path file foto yang akan disimpan di database
//    
//    if (fotoPath != null && !fotoPath.isEmpty()) {
//        // Tentukan path folder 'img'
//        File folder = new File("img");
//        if (!folder.exists()) {
//            folder.mkdir(); // Membuat folder 'img' jika belum ada
//        }
//
//        // Nama file baru untuk foto (gunakan nama asli atau ganti dengan nama baru)
//        String fileName = new File(fotoPath).getName();
//        File destination = new File(folder, fileName);
//
//        // Salin file foto ke folder 'img'
//        Files.copy(Paths.get(fotoPath), destination.toPath(), StandardCopyOption.REPLACE_EXISTING);
//
//        // Path foto baru yang akan disimpan di database
//        savedFotoPath = "img" + File.separator + fileName; // Path relatif untuk disimpan di database
//    }

    // Construct the SQL insert statement
    String sql = "INSERT INTO tbanggota (idanggota, nama, kelas, jurusan, alamat, jeniskelamin, tanggallahir, agama, email, no_telepon, foto) " +
                 "VALUES ('" + TIDANGGOTA.getText() + "', '" +
                 TNAMA.getText() + "', '" +
                 CKELAS.getSelectedItem() + "', '" +
                 CJURUSAN.getSelectedItem() + "', '" +
                 TALAMAT.getText() + "', '" +
                 CJENISKELAMIN.getSelectedItem() + "', '" +
                 tgl + "', '" +
                 CAGAMA.getSelectedItem() + "', '" +
                 TEMAIL.getText() + "', '" +
                 TNOMORHP.getText() + "', '" +
                 ttampil.getText() + "')";

    // Create a statement and execute the insert
    Statement stat = con.createStatement();
    stat.execute(sql);

    // Show success message
    JOptionPane.showMessageDialog(rootPane, "Data anggota telah disimpan");

} catch (Exception e) {
    // Show error message
    JOptionPane.showMessageDialog(rootPane, "Data gagal disimpan: " + e.getMessage());
}

// Refresh the member data display
tampildataanggota();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        bersih();
        tampildataanggota();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Mendapatkan baris yang dipilih
        int row = jTable1.getSelectedRow();

        // Pastikan baris yang dipilih valid
        if (row != -1) {
            // Mengambil ID Anggota dari baris yang dipilih
            String idAnggota = jTable1.getValueAt(row, 0).toString(); // ID Anggota dari kolom pertama

            // Menampilkan dialog konfirmasi
            int confirm = JOptionPane.showConfirmDialog(rootPane, "Apakah Anda yakin ingin menghapus anggota dengan ID: " + idAnggota + "?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                // Kode untuk menghapus data di database
                try {
                    String sql = "DELETE FROM tbanggota WHERE idanggota = '" + idAnggota + "'"; // Pastikan idAnggota adalah kunci utama

                    // Create a statement and execute the delete
                    Statement stat = con.createStatement();
                    stat.executeUpdate(sql);

                    // Show success message
                    JOptionPane.showMessageDialog(rootPane, "Data anggota telah dihapus");

                    // Memperbarui tampilan data anggota
                    tampildataanggota();
                } catch (Exception e) {
                    // Show error message
                    JOptionPane.showMessageDialog(rootPane, "Data Gagal Dihapus: " + e.getMessage());
                }
            }
        } else {
            // Tampilkan pesan kesalahan jika tidak ada baris yang dipilih
            JOptionPane.showMessageDialog(this, "Silakan pilih anggota yang ingin dihapus.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
        bersih();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        // Mengosongkan JTextField pencarian
        tpencarian.setText("");

        // Menampilkan semua data buku di JTable
        tampildataanggota();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String idAnggota = tpencarian.getText().trim(); // Mengambil input dari JTextField

        if (idAnggota.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan masukkan ID Anggota untuk mencari.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            String sql = "SELECT * FROM tbanggota WHERE idanggota = '" + idAnggota + "'";
            Statement stat = con.createStatement();
            ResultSet rs = stat.executeQuery(sql);

            DefaultTableModel tabel = new DefaultTableModel();
            tabel.addColumn("ID Anggota");
            tabel.addColumn("Nama");
            tabel.addColumn("Kelas");
            tabel.addColumn("Jurusan");
            tabel.addColumn("Alamat");
            tabel.addColumn("Jenis Kelamin");
            tabel.addColumn("Tanggal Lahir");
            tabel.addColumn("Agama");
            tabel.addColumn("Email");
            tabel.addColumn("No Telepon");

            if (rs.next()) {
                // Menambahkan data hasil pencarian ke tabel
                tabel.addRow(new Object[]{
                    rs.getString("idanggota"),
                    rs.getString("nama"),
                    rs.getString("kelas"),
                    rs.getString("jurusan"),
                    rs.getString("alamat"),
                    rs.getString("jeniskelamin"),
                    rs.getDate("tanggallahir"),
                    rs.getString("agama"),
                    rs.getString("email"),
                    rs.getString("no_telepon")
                });
                jTable1.setModel(tabel); // Menampilkan hasil pencarian di JTable
            } else {
                JOptionPane.showMessageDialog(this, "Anggota dengan ID " + idAnggota + " tidak ditemukan.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                tampildataanggota(); // Menampilkan semua data jika tidak ada hasil
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
            
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

      String selectedSort = curutkan.getSelectedItem().toString();
        String sql = "";

        switch (selectedSort) {
            case "TERBARU":
                sql = "SELECT * FROM tbanggota ORDER BY idanggota DESC"; // Mengurutkan berdasarkan data terbaru yang diinputkan
                break;
            case "TERLAMA":
                sql = "SELECT * FROM tbanggota ORDER BY idanggota ASC"; // Mengurutkan berdasarkan data terlama yang diinputkan
                break;
            case "HURUF (A-Z)":
                sql = "SELECT * FROM tbanggota ORDER BY nama ASC"; // Mengurutkan berdasarkan nama
                break;
            case "ANGKA (1-10)":
                sql = "SELECT * FROM tbanggota ORDER BY idanggota ASC"; // Mengurutkan berdasarkan idanggota
                break;
            default:
                JOptionPane.showMessageDialog(this, "Silakan pilih kriteria pengurutan.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
        }

        try {
            Statement stat = con.createStatement();
            ResultSet rs = stat.executeQuery(sql);

            DefaultTableModel tabel = new DefaultTableModel();
            tabel.addColumn("ID Anggota");
            tabel.addColumn("Nama");
            tabel.addColumn("Kelas");
            tabel.addColumn("Jurusan");
            tabel.addColumn("Alamat");
            tabel.addColumn("Jenis Kelamin");
            tabel.addColumn("Tanggal Lahir");
            tabel.addColumn("Agama");
            tabel.addColumn("Email");
            tabel.addColumn("No Telepon");

            while (rs.next()) {
                // Menambahkan data hasil pengurutan ke tabel
                tabel.addRow(new Object[]{
                    rs.getString("idanggota"),
                    rs.getString("nama"),
                    rs.getString("kelas"),
                    rs.getString("jurusan"),
                    rs.getString("alamat"),
                    rs.getString("jeniskelamin"),
                    rs.getDate("tanggallahir"),
                    rs.getString("agama"),
                    rs.getString("email"),
                    rs.getString("no_telepon")
                });
            }
            jTable1.setModel(tabel); // Menampilkan hasil pengurutan di JTable
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        // Membuat instance dari FrameB
        Dashboard pindah = new Dashboard();

        // Menampilkan FrameB
        pindah.setVisible(true);

        // Menutup FrameA (frame saat ini)
        this.dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    // Menambahkan MouseListener pada jTable1
jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        // Mendapatkan baris yang dipilih
        int row = jTable1.getSelectedRow();

        // Pastikan baris yang dipilih valid
        if (row != -1) {
            // Mengambil data dari baris yang dipilih
            String idAnggota = jTable1.getValueAt(row, 0).toString();
            String nama = jTable1.getValueAt(row, 1).toString();
            String kelas = jTable1.getValueAt(row, 2).toString();
            String jurusan = jTable1.getValueAt(row, 3).toString();
            String alamat = jTable1.getValueAt(row, 4).toString();
            String jenisKelamin = jTable1.getValueAt(row, 5).toString();
            String tanggalLahirString = jTable1.getValueAt(row, 6).toString(); // Ambil tanggal sebagai String
            String email = jTable1.getValueAt(row, 7).toString();
            String noTelepon = jTable1.getValueAt(row, 8).toString();
            String agama = jTable1.getValueAt(row, 9).toString();
            String foto = jTable1.getValueAt(row, 10).toString(); // Gambar atau path gambar

            // Konversi String tanggal menjadi Date
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd"); // Sesuaikan dengan format yang digunakan
            Date tanggalLahir = null;
            try {
                tanggalLahir = format.parse(tanggalLahirString);
            } catch (ParseException e) {
                e.printStackTrace(); // Tangani pengecualian jika format tidak valid
            }

            // Mengisi form anggota dengan data yang diambil
            TIDANGGOTA.setText(idAnggota);
            TNAMA.setText(nama);
            CKELAS.setSelectedItem(kelas); // Mengatur item yang dipilih di JComboBox
            CJURUSAN.setSelectedItem(jurusan); // Mengatur item yang dipilih di JComboBox
            TALAMAT.setText(alamat);
            CJENISKELAMIN.setSelectedItem(jenisKelamin); // Mengatur item yang dipilih di JComboBox
            jDateChooser1.setDate(tanggalLahir); // Mengatur tanggal di JDateChooser
            TEMAIL.setText(email);
            TNOMORHP.setText(noTelepon);
            CAGAMA.setSelectedItem(agama); // Mengatur item yang dipilih di JComboBox

            // Menampilkan file path di ttampil (gunakan path relatif)
            if (foto != null && !foto.isEmpty()) {
                ttampil.setText(foto); // Mengisi path gambar atau nama file ke dalam JTextField ttampil
            }

            // Mengatur gambar pada label jika ada
            if (foto != null && !foto.isEmpty()) {
                // Jika foto ada, tampilkan gambar pada JLabel
                File fotoFile = new File(foto); // Membuat objek File untuk path foto
                if (fotoFile.exists()) {
                    ImageIcon imageIcon = new ImageIcon(foto); // Pastikan 'foto' adalah path gambar yang valid
                    Image scaledImage = imageIcon.getImage().getScaledInstance(labeltampil.getWidth(), labeltampil.getHeight(), Image.SCALE_SMOOTH);
                    labeltampil.setIcon(new ImageIcon(scaledImage)); // Menampilkan gambar pada label
                } else {
                    labeltampil.setIcon(null); // Jika file tidak ada, hilangkan gambar
                }
            } else {
                // Jika tidak ada foto, hilangkan gambar
                labeltampil.setIcon(null);
            }
        }
    }
});

    // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange

        if (jDateChooser1.getDate() != null) {
        String pattern = "yyyy-MM-dd";
        SimpleDateFormat format = new SimpleDateFormat(pattern);
        tgl = format.format(jDateChooser1.getDate());
            }        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void TIDANGGOTAKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TIDANGGOTAKeyPressed
         try {
            sql="select * from tbanggota where idanggota='"+TIDANGGOTA.getText()+"'";
            stat=con.createStatement();
            rs=stat.executeQuery (sql);
            while (rs.next()) {
                TNAMA.setText(rs.getString(2));
                CKELAS.setSelectedItem(rs.getString(3));
                CJENISKELAMIN.setSelectedItem(rs.getString(4));
                TALAMAT.setText(rs.getString(5));
                CJENISKELAMIN.setSelectedItem(rs.getString(6));
//                TPENERBIT.setText(rs.getString(7));
                TEMAIL.setText(rs.getString(8));
                TNOMORHP.setText(rs.getString(9));
                CAGAMA.setSelectedItem(rs.getString(10));
                
                JOptionPane.showMessageDialog(rootPane, "ini datanya " +  TIDANGGOTA.getText());
            }
        }
        catch (Exception e) {

        }         // TODO add your handling code here:
    }//GEN-LAST:event_TIDANGGOTAKeyPressed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
// Membuat JFileChooser
JFileChooser fileChooser = new JFileChooser();
fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

// Filter file gambar
fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter(
        "Gambar (JPG, PNG, GIF)", "jpg", "png", "gif"));

// Menampilkan JFileChooser
int result = fileChooser.showOpenDialog(this);

if (result == JFileChooser.APPROVE_OPTION) {
    // Mendapatkan file yang dipilih
    File selectedFile = fileChooser.getSelectedFile();
    String filePath = selectedFile.getAbsolutePath();
    String fileName = selectedFile.getName();  // Hanya mengambil nama file

   

    // Menampilkan nama file di JTextField (misalnya jika hanya nama file yang diperlukan)
    // Jika Anda hanya ingin nama file tanpa path, gunakan fileName
    ttampil.setText(filePath);  // Menampilkan hanya nama file di JTextField

    // Menampilkan gambar di JLabel
    ImageIcon imageIcon = new ImageIcon(filePath);
    Image scaledImage = imageIcon.getImage().getScaledInstance(labeltampil.getWidth(), labeltampil.getHeight(), Image.SCALE_SMOOTH);
    labeltampil.setIcon(new ImageIcon(scaledImage));
}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formanggota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formanggota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formanggota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formanggota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formanggota().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CAGAMA;
    private javax.swing.JComboBox<String> CJENISKELAMIN;
    private javax.swing.JComboBox<String> CJURUSAN;
    private javax.swing.JComboBox<String> CKELAS;
    private javax.swing.JTextField TALAMAT;
    private javax.swing.JTextField TEMAIL;
    private javax.swing.JTextField TIDANGGOTA;
    private javax.swing.JTextField TNAMA;
    private javax.swing.JTextField TNOMORHP;
    private javax.swing.JComboBox<String> curutkan;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel labeltampil;
    private javax.swing.JTextField tpencarian;
    private javax.swing.JTextField ttampil;
    // End of variables declaration//GEN-END:variables

    private void tampildataanggota() {
   DefaultTableModel tabel = new DefaultTableModel();
tabel.addColumn("ID Anggota");
tabel.addColumn("Nama");
tabel.addColumn("Kelas");
tabel.addColumn("Jurusan");
tabel.addColumn("Alamat");
tabel.addColumn("JK");
tabel.addColumn("TGL Lahir");
tabel.addColumn("Email");
tabel.addColumn("No Hp");
tabel.addColumn("Agama");
tabel.addColumn("foto");

try {
    // Query untuk mengambil semua data anggota
    String sql = "SELECT * FROM tbanggota";
    Statement stat = con.createStatement();
    ResultSet rs = stat.executeQuery(sql);

    // Menambahkan data dari database ke tabel model
    while (rs.next()) {
        tabel.addRow(new Object[]{
            rs.getString("idanggota"),         // ID Anggota
            rs.getString("nama"),             // Nama
            rs.getString("kelas"),            // Kelas
            rs.getString("jurusan"),          // Jurusan
            rs.getString("alamat"),           // Alamat
            rs.getString("jeniskelamin"),     // Jenis Kelamin (JK)
            rs.getDate("tanggallahir"),       // Tanggal Lahir (TGL Lahir)
            rs.getString("email"),            // Email
            rs.getString("no_telepon"),       // No HP
            rs.getString("agama"),             // Agama
            rs.getString("foto")
        });
    }

    // Set model tabel ke jTable1 setelah semua data selesai dimasukkan
    jTable1.setModel(tabel);

    // Query untuk mendapatkan ID anggota terakhir
    sql = "SELECT idanggota FROM tbanggota ORDER BY idanggota DESC LIMIT 1";
    rs = stat.executeQuery(sql);

    // Menentukan ID anggota baru
    String idAnggotaBaru = "KDA001"; // Default ID anggota jika tabel kosong

    if (rs.next()) {
        String lastId = rs.getString("idanggota");           // ID terakhir, misalnya "KDA005"
        int lastNumber = Integer.parseInt(lastId.substring(3)); // Ambil angka setelah "KDA"
        lastNumber++;                                         // Tambahkan 1
        idAnggotaBaru = String.format("KDA%03d", lastNumber); // Format ulang menjadi "KDA" + 3 digit angka
    }

    // Tampilkan ID anggota baru ke field TIDANGGOTA
    TIDANGGOTA.setText(idAnggotaBaru);
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
}
    }

    private void bersih() {
    // Bersihkan komponen JTextField
      
        TNAMA.setText("");
        TALAMAT.setText("");
        TEMAIL.setText("");
        TNOMORHP.setText("");
        ttampil.setText("");
        labeltampil.setIcon(null); // Menghapus gambar yang ada di label

        // Tentukan indeks default
        final int PILIH = 0; // atau -1 jika tidak ada pilihan yang diinginkan

        // Bersihkan pilihan di JComboBox dengan mengatur indeks ke PILIH (default)
        CKELAS.setSelectedIndex(PILIH);
        CJURUSAN.setSelectedIndex(PILIH);
        CJENISKELAMIN.setSelectedIndex(PILIH);
        CAGAMA.setSelectedIndex(PILIH);

        // Bersihkan tanggal di JDateChooser
        jDateChooser1.setDate(null);
    }
}
