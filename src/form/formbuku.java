/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import Koneksi.KoneksiDB;
import com.toedter.calendar.JDateChooser;
import java.awt.print.PrinterException;
import static java.lang.String.format;
import java.text.MessageFormat;
import javax.swing.table.DefaultTableModel;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JScrollPane;


/**
 *
 * @author oc
 */
public class formbuku extends javax.swing.JFrame {
   public Connection con;
    public Statement stat;
    public ResultSet rs;
    public String sql, tgl="";
  
    /**
     * Creates new form formbuku
     */
    public formbuku() {
        initComponents();
        setLocationRelativeTo(null);
        KoneksiDB db = new KoneksiDB();
        db.koneksiperpus();
        con=db.con;
        stat=db.stat;
        rs=db.rs;
        
         TIDBUKU.setEnabled(false);
        
        tampildatabuku();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCalendar1 = new com.toedter.calendar.JCalendar();
        jFrame1 = new javax.swing.JFrame();
        TJUDUL = new javax.swing.JTextField();
        TPENGARANG = new javax.swing.JTextField();
        TPENERBIT = new javax.swing.JTextField();
        TJUMLAHHALAMAN = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TABELBUKU = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        TIDBUKU = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tpencarian = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        CSTATUS = new javax.swing.JComboBox<>();
        curutkan = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        TNORAK = new javax.swing.JTextField();
        CKATEGORI = new javax.swing.JComboBox<>();
        TJUMLAH = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(TJUDUL, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 240, -1));
        getContentPane().add(TPENGARANG, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 240, -1));
        getContentPane().add(TPENERBIT, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 240, -1));

        TJUMLAHHALAMAN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TJUMLAHHALAMANActionPerformed(evt);
            }
        });
        getContentPane().add(TJUMLAHHALAMAN, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 240, -1));

        jPanel1.setBackground(new java.awt.Color(0, 51, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TABELBUKU.setBackground(new java.awt.Color(255, 164, 0));
        TABELBUKU.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "JUDUL", "PENGARANG", "PENERBIT", "HALAMAN", "NO RAK", "KATEGORI", "JUMLAH", "STATUS", "TGL TERBIT"
            }
        ));
        TABELBUKU.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        TABELBUKU.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TABELBUKUMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TABELBUKU);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 820, 190));

        jButton1.setBackground(new java.awt.Color(3, 169, 244));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("UPDATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, -1, 60));

        jButton2.setBackground(new java.awt.Color(211, 47, 47));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("DELETE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 240, -1, 60));

        jButton3.setBackground(new java.awt.Color(176, 190, 197));
        jButton3.setForeground(javax.swing.UIManager.getDefaults().getColor("Actions.Yellow"));
        jButton3.setText("CLEAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 550, 100, 60));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("JUMLAH HALAMAN");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 120, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("PENERBIT");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 120, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("PENGARANG");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 120, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("JUDUL");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 120, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ID BUKU");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 120, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("NOMOR RAK");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, 120, -1));

        TIDBUKU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TIDBUKUActionPerformed(evt);
            }
        });
        TIDBUKU.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TIDBUKUKeyPressed(evt);
            }
        });
        jPanel1.add(TIDBUKU, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 240, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("KATEGORI");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, 120, -1));
        jPanel1.add(tpencarian, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 240, 200, -1));

        jButton5.setBackground(java.awt.Color.lightGray);
        jButton5.setText("URUTKAN");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 280, 90, -1));

        jButton6.setBackground(new java.awt.Color(255, 193, 7));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("CARI");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 240, 90, -1));

        CSTATUS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PILIH", "TERSEDIA", "KOSONG" }));
        jPanel1.add(CSTATUS, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 160, 280, -1));

        curutkan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "URUTKAN BERDASARKAN", "TERBARU", "TERLAMA", "HURUF (A-Z)", "ANGKA (1-10)" }));
        jPanel1.add(curutkan, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 280, 200, -1));

        jButton4.setBackground(new java.awt.Color(76, 175, 80));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("SAVE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 70, 60));

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DATA BUKU");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 320, -1, -1));

        jButton7.setBackground(new java.awt.Color(130, 126, 126));
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("BACK");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 550, -1, 60));

        jButton9.setBackground(new java.awt.Color(240, 215, 140));
        jButton9.setForeground(new java.awt.Color(51, 51, 51));
        jButton9.setText("CENCEL");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 240, -1, 60));

        jLabel12.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("FORM BUKU");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 193, 7));
        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 820, 220));
        jPanel1.add(TNORAK, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 70, 280, -1));

        CKATEGORI.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PILIH", "COMIK ", "PUISI", "NOVEL", "BUKU AJAR" }));
        jPanel1.add(CKATEGORI, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 100, 280, -1));
        jPanel1.add(TJUMLAH, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 130, 280, -1));

        jDateChooser1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDateChooser1MouseClicked(evt);
            }
        });
        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });
        jPanel1.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 190, 280, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("JUMLAH");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 140, 120, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("STATUS");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 170, 120, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("TANGGAL TERBIT");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 200, 120, -1));

        jPanel3.setBackground(new java.awt.Color(3, 169, 244));
        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 19, 820, 210));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TJUMLAHHALAMANActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TJUMLAHHALAMANActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TJUMLAHHALAMANActionPerformed

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
        if (jDateChooser1.getDate() != null) {
            String pattern = "yyyy-MM-dd";
            SimpleDateFormat format = new SimpleDateFormat(pattern);
            tgl = format.format(jDateChooser1.getDate());
        } // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void jDateChooser1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDateChooser1MouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooser1MouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
    // Bersihkan komponen JTextField
         
        TJUDUL.setText("");
        TPENGARANG.setText("");
        TPENERBIT.setText("");
        TJUMLAHHALAMAN.setText("");
        TNORAK.setText("");
        TJUMLAH.setText("");

        // Tentukan indeks default
        final int PILIH = 0; // atau -1 jika tidak ada pilihan yang diinginkan

        // Bersihkan pilihan di JComboBox dengan mengatur indeks ke PILIH (default)
        CKATEGORI.setSelectedIndex(PILIH);
        CSTATUS.setSelectedIndex(PILIH);

        // Bersihkan tanggal di JDateChooser
        jDateChooser1.setDate(null);
        
        tampildatabuku();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
      
        Dashboard pindah = new Dashboard();

       
        pindah.setVisible(true);

       
        this.dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {

            sql = "INSERT INTO tbbuku VALUES ('" + TIDBUKU.getText() + "', '" +
            TJUDUL.getText() + "', '" +
            TPENGARANG.getText() + "', '" +
            TPENERBIT.getText() + "', '" +
            TJUMLAHHALAMAN.getText() + "', '" +
            TNORAK.getText() + "', '" +
            CKATEGORI.getSelectedItem() + "', '" +
            TJUMLAH.getText() + "', '" +
            CSTATUS.getSelectedItem() + "', '" +
            tgl+ "')";
            
            stat = con.createStatement();
            stat.execute(sql);

            
            JOptionPane.showMessageDialog(rootPane, "Data telah Disimpan");

        } catch (Exception e) {
           
            JOptionPane.showMessageDialog(rootPane, "Data Gagal Disimpan: " + e.getMessage());
        }
         bersih ();
        tampildatabuku();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        String idBuku = tpencarian.getText().trim(); // Mengambil input dari JTextField

        if (idBuku.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan masukkan ID Buku untuk mencari.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            String sql = "SELECT * FROM tbbuku WHERE idBuku = '" + idBuku + "'";
            Statement stat = con.createStatement();
            ResultSet rs = stat.executeQuery(sql);

            DefaultTableModel tabel = new DefaultTableModel();
            tabel.addColumn("ID Buku");
            tabel.addColumn("Judul");
            tabel.addColumn("Pengarang");
            tabel.addColumn("Penerbit");
            tabel.addColumn("Jumlah Halaman");
            tabel.addColumn("No Rak");
            tabel.addColumn("Kategori");
            tabel.addColumn("Jumlah");
            tabel.addColumn("Status");
            tabel.addColumn("Tanggal Terbit");

            if (rs.next()) {
                // Menambahkan data hasil pencarian ke tabel
                tabel.addRow(new Object[]{
                    rs.getString("idBuku"),
                    rs.getString("judul"),
                    rs.getString("pengarang"),
                    rs.getString("penerbit"),
                    rs.getString("jumlahhalaman"),
                    rs.getString("nomorrak"),
                    rs.getString("kategori"),
                    rs.getString("jumlah"),
                    rs.getString("status"),
                    rs.getDate("tanggalTerbit")
                });
                 TABELBUKU.setModel(tabel); // Menampilkan hasil pencarian di JTable
                 JOptionPane.showMessageDialog(rootPane, "ini data buku dengan ID " +  TIDBUKU.getText());
            } else {
                JOptionPane.showMessageDialog(this, "Buku dengan ID " + idBuku + " tidak ditemukan.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                tampildatabuku(); // Menampilkan semua data jika tidak ada hasil
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        String selectedSort = curutkan.getSelectedItem().toString();
        String sql = "";

        switch (selectedSort) {
            case "TERBARU":
            sql = "SELECT * FROM tbbuku ORDER BY idbuku DESC"; // Mengurutkan berdasarkan data terbaru yang diinputkan
            break;
            case "TERLAMA":
            sql = "SELECT * FROM tbbuku ORDER BY idbuku ASC"; // Mengurutkan berdasarkan data terlama yang diinputkan
            break;
            case "HURUF (A-Z)":
            sql = "SELECT * FROM tbbuku ORDER BY judul ASC"; // Mengurutkan berdasarkan judul
            break;
            case "ANGKA (1-10)":
            sql = "SELECT * FROM tbbuku ORDER BY idbuku ASC"; // Mengurutkan berdasarkan idbuku
            break;
            default:
            JOptionPane.showMessageDialog(this, "Silakan pilih kriteria pengurutan.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            Statement stat = con.createStatement();
            ResultSet rs = stat.executeQuery(sql);

            DefaultTableModel tabel = new DefaultTableModel();
            tabel.addColumn("ID Buku");
            tabel.addColumn("Judul");
            tabel.addColumn("Pengarang");
            tabel.addColumn("Penerbit");
            tabel.addColumn("Jumlah Halaman");
            tabel.addColumn("No Rak");
            tabel.addColumn("Kategori");
            tabel.addColumn("Jumlah");
            tabel.addColumn("Status");
            tabel.addColumn("Tanggal Terbit");

            while (rs.next()) {
                // Menambahkan data hasil pengurutan ke tabel
                tabel.addRow(new Object[]{
                    rs.getString("idBuku"),
                    rs.getString("judul"),
                    rs.getString("pengarang"),
                    rs.getString("penerbit"),
                    rs.getString("jumlahHalaman"),
                    rs.getString("nomorrak"),
                    rs.getString("kategori"),
                    rs.getString("jumlah"),
                    rs.getString("status"),
                    rs.getDate("tanggalTerbit")
                });
            }
            TABELBUKU.setModel(tabel); // Menampilkan hasil pengurutan di JTable
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void TIDBUKUKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TIDBUKUKeyPressed
//        try {
//            sql="select * from tbbuku where idbuku='"+TIDBUKU.getText()+"'";
//            stat=con.createStatement();
//            rs=stat.executeQuery (sql);
//            while (rs.next()) {
//                TJUDUL.setText(rs.getString(2));
//                TPENGARANG.setText(rs.getString(3));
//                TPENERBIT.setText(rs.getString(4));
//                TJUMLAHHALAMAN.setText(rs.getString(5));
//                TNORAK.setText(rs.getString(6));
//                CKATEGORI.setSelectedItem(rs.getString(7));
//                TJUMLAH.setText(rs.getString(8));
//                CSTATUS.setSelectedItem(rs.getString(9));
//                // TJUDUL.setText(rs.getString(1));
//                JOptionPane.showMessageDialog(rootPane, "ini datanya " +  TIDBUKU.getText());
//            }
//        }
//        catch (Exception e) {
//
//        }        // TODO add your handling code here:

    }//GEN-LAST:event_TIDBUKUKeyPressed

    private void TIDBUKUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TIDBUKUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TIDBUKUActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        // Mengosongkan JTextField pencarian
        tpencarian.setText("");

        // Menampilkan semua data buku di JTable
        tampildatabuku();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
            // Mendapatkan baris yang dipilih
        int row = TABELBUKU.getSelectedRow();

        // Pastikan baris yang dipilih valid
        if (row != -1) {
            // Mengambil ID Buku dari baris yang dipilih
            String idBuku = TABELBUKU.getValueAt(row, 0).toString(); // ID Buku dari kolom pertama

            // Menampilkan dialog konfirmasi
            int confirm = JOptionPane.showConfirmDialog(rootPane, "Apakah Anda yakin ingin menghapus buku dengan ID: " + idBuku + "?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                // Kode untuk menghapus data di database
                try {
                    String sql = "DELETE FROM tbbuku WHERE idBuku = '" + idBuku + "'"; // Pastikan idBuku adalah kunci utama

                    // Create a statement and execute the delete
                    Statement stat = con.createStatement();
                    stat.executeUpdate(sql);

                    // Show success message
                    JOptionPane.showMessageDialog(rootPane, "Data telah dihapus");

                    // Memperbarui tampilan data buku
                    tampildatabuku();
                } catch (Exception e) {
                    // Show error message
                    JOptionPane.showMessageDialog(rootPane, "Data Gagal Dihapus: " + e.getMessage());
                }
            }
        } else {
            // Tampilkan pesan kesalahan jika tidak ada baris yang dipilih
            JOptionPane.showMessageDialog(this, "Silakan pilih buku yang ingin dihapus.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
         bersih ();
        tampildatabuku();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        //    Mendapatkan baris yang dipilih
        int row = TABELBUKU.getSelectedRow();

        // Pastikan baris yang dipilih valid
        if (row != -1) {
            // Mengambil ID Buku dari baris yang dipilih
            String idBuku = TABELBUKU.getValueAt(row, 0).toString(); // ID Buku dari kolom pertama

            // Kode untuk memperbarui data di database
            try {
                String sql = "UPDATE tbbuku SET " +
                "judul = '" + TJUDUL.getText() + "', " +
                "pengarang = '" + TPENGARANG.getText() + "', " +
                "penerbit = '" + TPENERBIT.getText() + "', " +
                "jumlahhalaman = '" + TJUMLAHHALAMAN.getText() + "', " +
                "nomorrak = '" + TNORAK.getText() + "', " +
                "kategori = '" + CKATEGORI.getSelectedItem() + "', " +
                "jumlah = '" + TJUMLAH.getText() + "', " +
                "status = '" + CSTATUS.getSelectedItem() + "', " +
                "tanggalTerbit = '" + new SimpleDateFormat("yyyy-MM-dd").format(jDateChooser1.getDate()) + "' " +
                "WHERE idBuku = '" + idBuku + "'"; // Pastikan idBuku adalah kunci utama

                // Create a statement and execute the update
                Statement stat = con.createStatement();
                stat.executeUpdate(sql);

                // Show success message
                JOptionPane.showMessageDialog(rootPane, "Data telah diperbarui");

            } catch (Exception e) {
                // Show error message
                JOptionPane.showMessageDialog(rootPane, "Data Gagal Diperbarui: " + e.getMessage());
            }
             bersih ();
            tampildatabuku();
        } else {
            // Tampilkan pesan kesalahan jika tidak ada baris yang dipilih
            JOptionPane.showMessageDialog(this, "Silakan pilih buku yang ingin diperbarui.", "Peringatan", JOptionPane.WARNING_MESSAGE);

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TABELBUKUMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TABELBUKUMouseClicked

        //    Mendapatkan baris yang dipilih
        int row = TABELBUKU.getSelectedRow();

        // Pastikan baris yang dipilih valid
        if (row != -1) {
            // Mengambil data dari baris yang dipilih
            String idBuku = TABELBUKU.getValueAt(row, 0).toString();
            String judul = TABELBUKU.getValueAt(row, 1).toString();
            String pengarang = TABELBUKU.getValueAt(row, 2).toString();
            String penerbit = TABELBUKU.getValueAt(row, 3).toString();
            String jumlahHalaman = TABELBUKU.getValueAt(row, 4).toString();
            String noRak = TABELBUKU.getValueAt(row, 5).toString();
            String kategori = TABELBUKU.getValueAt(row, 6).toString();
            String jumlah = TABELBUKU.getValueAt(row, 7).toString();
            String status = TABELBUKU.getValueAt(row, 8).toString();
            String tanggalTerbitString = TABELBUKU.getValueAt(row, 9).toString(); // Ambil tanggal sebagai String

            // Konversi String tanggal menjadi Date
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd"); // Sesuaikan dengan format yang digunakan
            Date tanggalTerbit = null;
            try {
                tanggalTerbit = format.parse(tanggalTerbitString);
            } catch (ParseException e) {
                e.printStackTrace(); // Tangani pengecualian jika format tidak valid
            }

            // Mengisi form buku dengan data yang diambil
            TIDBUKU.setText(idBuku);
            TJUDUL.setText(judul);
            TPENGARANG.setText(pengarang);
            TPENERBIT.setText(penerbit);
            TJUMLAHHALAMAN.setText(jumlahHalaman);
            TNORAK.setText(noRak);
            CKATEGORI.setSelectedItem(kategori); // Mengatur item yang dipilih di JComboBox
            TJUMLAH.setText(jumlah);
            CSTATUS.setSelectedItem(status); // Mengatur item yang dipilih di JComboBox
            jDateChooser1.setDate(tanggalTerbit); // Mengatur tanggal di JDateChooser
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_TABELBUKUMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formbuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formbuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formbuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formbuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formbuku().setVisible(true);
            }
        });
    }

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CKATEGORI;
    private javax.swing.JComboBox<String> CSTATUS;
    private javax.swing.JTable TABELBUKU;
    private javax.swing.JTextField TIDBUKU;
    private javax.swing.JTextField TJUDUL;
    private javax.swing.JTextField TJUMLAH;
    private javax.swing.JTextField TJUMLAHHALAMAN;
    private javax.swing.JTextField TNORAK;
    private javax.swing.JTextField TPENERBIT;
    private javax.swing.JTextField TPENGARANG;
    private javax.swing.JComboBox<String> curutkan;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private com.toedter.calendar.JCalendar jCalendar1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField tpencarian;
    // End of variables declaration//GEN-END:variables

   private void tampildatabuku() {
        // Buat model tabel baru
      DefaultTableModel tabel = new DefaultTableModel();
      tabel.addColumn("ID Buku");
      tabel.addColumn("Judul");
      tabel.addColumn("Pengarang");  
      tabel.addColumn("Penerbit");
      tabel.addColumn("Jumlah Halaman");
      tabel.addColumn("No Rak");
      tabel.addColumn("Kategori");
      tabel.addColumn("Jumlah");
      tabel.addColumn("Status");
      tabel.addColumn("Tanggal Terbit");

      try {
          // Query untuk mengambil data dari tabel tbbuku
          String sql = "SELECT * FROM tbbuku";
          Statement stat = con.createStatement();
          ResultSet rs = stat.executeQuery(sql);

          // Format tanggal yang digunakan dalam string
          SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

          // Loop untuk menambahkan data ke model tabel
          while (rs.next()) {
              String tanggalString = rs.getString("tanggalterbit");
              Date utilDate = null;
              java.sql.Date sqlDate = null;

              // Konversi dari String ke Date
              try {
                  utilDate = dateFormat.parse(tanggalString);
                  sqlDate = new java.sql.Date(utilDate.getTime());
              } catch (ParseException e) {
                  JOptionPane.showMessageDialog(null, "Error parsing date: " + e.getMessage());
              }

              tabel.addRow(new Object[]{
                  rs.getString("idbuku"),
                  rs.getString("judul"), 
                  rs.getString("pengarang"),
                  rs.getString("penerbit"),
                  rs.getString("jumlahhalaman"), 
                  rs.getString("nomorrak"),
                  rs.getString("kategori"),
                  rs.getString("jumlah"),
                  rs.getString("status"),
                  sqlDate
              });
          }

          // Set model tabel ke JTable
          TABELBUKU.setModel(tabel);

          // Ambil ID buku terakhir
          sql = "SELECT idbuku FROM tbbuku ORDER BY idbuku DESC LIMIT 1";
          rs = stat.executeQuery(sql);
          String idBukuBaru = "KDB001"; // Default jika tabel kosong

          if (rs.next()) {
              String lastId = rs.getString("idbuku"); // ID terakhir, misalnya "KDB005"
              int lastNumber = Integer.parseInt(lastId.substring(3)); // Ambil angka setelah "KDB"
              lastNumber++; // Tambahkan 1
              idBukuBaru = String.format("KDB%03d", lastNumber); // Format ulang menjadi "KDB" + 3 digit angka
          }

          // Tampilkan ID buku baru ke TIDBUKU
          TIDBUKU.setText(idBukuBaru);

      } catch (Exception e) {
          JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
     }

  } 

    private void bersih() {
       // Bersihkan komponen JTextField
         
        TJUDUL.setText("");
        TPENGARANG.setText("");
        TPENERBIT.setText("");
        TJUMLAHHALAMAN.setText("");
        TNORAK.setText("");
        TJUMLAH.setText("");

        // Tentukan indeks default
        final int PILIH = 0; // atau -1 jika tidak ada pilihan yang diinginkan

        // Bersihkan pilihan di JComboBox dengan mengatur indeks ke PILIH (default)
        CKATEGORI.setSelectedIndex(PILIH);
        CSTATUS.setSelectedIndex(PILIH);

        // Bersihkan tanggal di JDateChooser
        jDateChooser1.setDate(null);
    }
   
   
    
}
