/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import Koneksi.KoneksiDB;
import com.toedter.calendar.JDateChooser;
import static java.lang.String.format;
import javax.swing.table.DefaultTableModel;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.Calendar;
import javax.swing.text.JTextComponent;
/**
 *
 * @author oc
 */

public class formpeminjaman extends javax.swing.JFrame {
    public Connection con;
    public Statement stat;
    public ResultSet rs;
    public String sql, tglpinjam, tglkembali="";
    
    
    

    /**
     * Creates new form formpeminjaman
     */
    public formpeminjaman() {
        initComponents();
        initListeners();
        setDateChoosers(); // Atur tanggal pada JDateChooser
        setLocationRelativeTo(null);
        KoneksiDB db = new KoneksiDB();
        db.koneksiperpus();
        con=db.con;
        stat=db.stat;
        rs=db.rs;
       
        TKODE.setEnabled(false);
        THARGA.setEditable(false);
        TID.setEnabled(false);
        TNAMA.setEnabled(false);
        TBUKU.setEnabled(false);
        TNORAK.setEnabled(false);
        TLAMAPINJAM.setEnabled(false);
        THARGA.setEnabled(false);
       

        tampildataanggota();
        tampildatabuku();
        setkode();
        
    }
    

    public void initListeners() {
    // Menambahkan listener untuk jDateChooser1
    jDateChooser1.addPropertyChangeListener(new PropertyChangeListener() {
        @Override
        public void propertyChange(PropertyChangeEvent evt) {
            if ("date".equals(evt.getPropertyName())) {
                hitungSelisihTanggal();
                hitungharga();
            }
        }

        private void hitungharga() {
          
        // Ambil tanggal dari jDateChooser
            Date tanggalMulai = jDateChooser1.getDate();
            Date tanggalAkhir = jDateChooser2.getDate();

            // Pastikan kedua tanggal tidak null
            if (tanggalMulai != null && tanggalAkhir != null) {
                // Hitung selisih waktu dalam milidetik
                long selisihMilidetik = tanggalAkhir.getTime() - tanggalMulai.getTime();

                // Konversi dari milidetik ke hari
                 long selisihHari = Math.abs (TimeUnit.MILLISECONDS.toDays(selisihMilidetik));

                // Tampilkan hasil di text field TLAMAPINJAM
                TLAMAPINJAM.setText(String.valueOf(selisihHari + " hari"));

                // Hitung harga
                if (selisihHari > 7) {
                    long harga = (selisihHari - 7) * 2500; // Hitung harga setelah 7 hari
                    THARGA.setText(String.valueOf(harga));
                } else {
                    THARGA.setText("gratis");
                }
            } else {
                TLAMAPINJAM.setText("");
                THARGA.setText("");
            }

       
}

    });

    // Menambahkan listener untuk jDateChooser2
    jDateChooser2.addPropertyChangeListener(new PropertyChangeListener() {
        @Override
        public void propertyChange(PropertyChangeEvent evt) {
            if ("date".equals(evt.getPropertyName())) {
                hitungSelisihTanggal();
            }
        }
    });
}
   private void hitungSelisihTanggal() {
         // Ambil tanggal dari jDateChooser
    Date tanggalMulai = jDateChooser1.getDate();
    Date tanggalAkhir = jDateChooser2.getDate();

    // Pastikan kedua tanggal tidak null
    if (tanggalMulai != null && tanggalAkhir != null) {
        // Hitung selisih waktu dalam milidetik
        long selisihMilidetik = tanggalAkhir.getTime() - tanggalMulai.getTime();

        // Konversi dari milidetik ke hari
        long selisihHari = Math.abs (TimeUnit.MILLISECONDS.toDays(selisihMilidetik));

        // Tampilkan hasil di text field LAMAPINJAM
        TLAMAPINJAM.setText(String.valueOf(selisihHari + " hari"));
    } else {
        TLAMAPINJAM.setText("");
    }
      
}
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TDENDA = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelbuku = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelanggota = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        tpencariananggota = new javax.swing.JTextField();
        curutkan = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        curutkanbuku = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        TKODE = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        TID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TNAMA = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TBUKU = new javax.swing.JTextField();
        TNORAK = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        TLAMAPINJAM = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jButton7 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        LAMAPINJAM = new javax.swing.JPanel();
        THARGA = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        tpencarianbuku = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelbuku.setBackground(new java.awt.Color(255, 164, 0));
        tabelbuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelbuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelbukuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelbuku);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 370, -1, 220));

        tabelanggota.setBackground(new java.awt.Color(3, 169, 244));
        tabelanggota.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelanggota.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelanggotaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelanggota);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, -1, 220));

        jButton1.setBackground(new java.awt.Color(3, 169, 244));
        jButton1.setText("Cari");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 320, 60, 30));

        jButton2.setBackground(new java.awt.Color(3, 169, 244));
        jButton2.setText("Cari");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 30, 60, 30));

        tpencariananggota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tpencariananggotaActionPerformed(evt);
            }
        });
        getContentPane().add(tpencariananggota, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 30, 160, 30));

        curutkan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PILIH", "TERBARU", "TERLAMA", "HURUF (A-Z)", "ANGKA (1-10)" }));
        getContentPane().add(curutkan, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 30, 100, 30));

        jButton5.setBackground(java.awt.Color.lightGray);
        jButton5.setText("URUTKAN");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 30, 90, 30));

        curutkanbuku.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PILIH", "TERBARU", "TERLAMA", "HURUF (A-Z)", "ANGKA (1-10)" }));
        getContentPane().add(curutkanbuku, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 320, 110, 30));

        jButton6.setBackground(java.awt.Color.lightGray);
        jButton6.setText("URUTKAN");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 320, 90, 30));

        jPanel1.setBackground(new java.awt.Color(255, 193, 7));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 500, 320));

        TKODE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TKODEActionPerformed(evt);
            }
        });
        getContentPane().add(TKODE, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 180, 30));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("KODE PINJAM");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        TID.setForeground(new java.awt.Color(255, 193, 7));
        TID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TIDActionPerformed(evt);
            }
        });
        getContentPane().add(TID, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 180, 30));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ID ANGGOTA");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        TNAMA.setForeground(new java.awt.Color(255, 193, 7));
        getContentPane().add(TNAMA, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 180, 30));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("NAMA");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("BUKU");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));
        getContentPane().add(TBUKU, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, 180, 30));
        getContentPane().add(TNORAK, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, 180, 30));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("NO RAK");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, -1));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("MULAI PINJAM");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, -1, -1));

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("AKHIR PINJAM");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, -1, -1));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("LAMA PINJAM");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, -1, -1));

        TLAMAPINJAM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TLAMAPINJAMActionPerformed(evt);
            }
        });
        getContentPane().add(TLAMAPINJAM, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 440, 180, 30));

        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });
        getContentPane().add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 390, 180, 30));

        jDateChooser2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser2PropertyChange(evt);
            }
        });
        getContentPane().add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, 180, 30));

        jButton7.setBackground(new java.awt.Color(130, 126, 126));
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("BACK");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 580, 80, 30));

        jPanel2.setBackground(new java.awt.Color(3, 169, 244));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("FORM PEMINJAMAN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(54, 54, 54))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 70));

        jButton3.setBackground(new java.awt.Color(176, 190, 197));
        jButton3.setForeground(javax.swing.UIManager.getDefaults().getColor("Actions.Yellow"));
        jButton3.setText("CLEAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 540, 90, 30));

        jButton4.setBackground(new java.awt.Color(76, 175, 80));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("SAVE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 80, 30));

        jButton8.setBackground(new java.awt.Color(240, 148, 49));
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("PREVIEW REPORT");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 580, 170, 30));

        LAMAPINJAM.setBackground(new java.awt.Color(3, 169, 244));
        LAMAPINJAM.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        THARGA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                THARGAActionPerformed(evt);
            }
        });
        LAMAPINJAM.add(THARGA, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 420, 180, 30));

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("HARGA");
        LAMAPINJAM.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 431, -1, -1));

        jButton9.setBackground(new java.awt.Color(240, 215, 140));
        jButton9.setForeground(new java.awt.Color(51, 51, 51));
        jButton9.setText("CENCEL");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        LAMAPINJAM.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 470, -1, 30));

        getContentPane().add(LAMAPINJAM, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 300, 550));

        tpencarianbuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tpencarianbukuActionPerformed(evt);
            }
        });
        getContentPane().add(tpencarianbuku, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 320, 160, 30));

        jPanel4.setBackground(new java.awt.Color(0, 51, 204));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, 500, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        String idBuku = tpencarianbuku.getText().trim(); // Mengambil input dari JTextField

        if (idBuku.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan masukkan ID Buku untuk mencari.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            String sql = "SELECT * FROM tbbuku WHERE idBuku = '" + idBuku + "'";
            Statement stat = con.createStatement();
            ResultSet rs = stat.executeQuery(sql);

            DefaultTableModel tabel = new DefaultTableModel();
            tabel.addColumn("ID Buku");
            tabel.addColumn("Judul");
            tabel.addColumn("No Rak");
            tabel.addColumn("Jumlah");
            if (rs.next()) {
                // Menambahkan data hasil pencarian ke tabel
                tabel.addRow(new Object[]{
                    rs.getString("idBuku"),
                    rs.getString("judul"),
                    rs.getString("nomorrak"),
                    rs.getString("jumlah"),
                });
                tabelbuku.setModel(tabel); // Menampilkan hasil pencarian di JTable
            } else {
                JOptionPane.showMessageDialog(this, "Buku dengan ID " + idBuku + " tidak ditemukan.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                tampildatabuku(); // Menampilkan semua data jika tidak ada hasil
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
               // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tpencariananggotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tpencariananggotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tpencariananggotaActionPerformed

    private void tpencarianbukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tpencarianbukuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tpencarianbukuActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        String selectedSort = curutkan.getSelectedItem().toString();
        String sql = "";

        switch (selectedSort) {
            case "TERBARU":
            sql = "SELECT * FROM tbanggota ORDER BY idanggota DESC"; // Mengurutkan berdasarkan data terbaru yang diinputkan
            break;
            case "TERLAMA":
            sql = "SELECT * FROM tbanggota ORDER BY idanggota ASC"; // Mengurutkan berdasarkan data terlama yang diinputkan
            break;
            case "HURUF (A-Z)":
            sql = "SELECT * FROM tbanggota ORDER BY nama ASC"; // Mengurutkan berdasarkan nama
            break;
            case "ANGKA (1-10)":
            sql = "SELECT * FROM tbanggota ORDER BY idanggota ASC"; // Mengurutkan berdasarkan idanggota
            break;
            default:
            JOptionPane.showMessageDialog(this, "Silakan pilih kriteria pengurutan.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            Statement stat = con.createStatement();
            ResultSet rs = stat.executeQuery(sql);

            DefaultTableModel tabel = new DefaultTableModel();
            tabel.addColumn("ID Anggota");
            tabel.addColumn("Nama");
            tabel.addColumn("Alamat");
            tabel.addColumn("No Telepon");

            while (rs.next()) {
                // Menambahkan data hasil pengurutan ke tabel
                tabel.addRow(new Object[]{
                    rs.getString("idanggota"),
                    rs.getString("nama"),
                    rs.getString("alamat"),
                    rs.getString("no_telepon")
                });
            }
            tabelanggota.setModel(tabel); // Menampilkan hasil pengurutan di JTable
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        String selectedSort = curutkanbuku.getSelectedItem().toString();
        String sql = "";

        switch (selectedSort) {
            case "TERBARU":
            sql = "SELECT * FROM tbbuku ORDER BY idbuku DESC"; // Mengurutkan berdasarkan data terbaru yang diinputkan
            break;
            case "TERLAMA":
            sql = "SELECT * FROM tbbuku ORDER BY idbuku ASC"; // Mengurutkan berdasarkan data terlama yang diinputkan
            break;
            case "HURUF (A-Z)":
            sql = "SELECT * FROM tbbuku ORDER BY judul ASC"; // Mengurutkan berdasarkan judul
            break;
            case "ANGKA (1-10)":
            sql = "SELECT * FROM tbbuku ORDER BY idbuku ASC"; // Mengurutkan berdasarkan idbuku
            break;
            default:
            JOptionPane.showMessageDialog(this, "Silakan pilih kriteria pengurutan.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            Statement stat = con.createStatement();
            ResultSet rs = stat.executeQuery(sql);

            DefaultTableModel tabel = new DefaultTableModel();
            tabel.addColumn("ID Buku");
            tabel.addColumn("Judul");
            tabel.addColumn("Pengarang");
            tabel.addColumn("Jumlah");
          
            while (rs.next()) {
                // Menambahkan data hasil pengurutan ke tabel
                tabel.addRow(new Object[]{
                    rs.getString("idBuku"),
                    rs.getString("judul"),
                    rs.getString("nomorrak"),
                    rs.getString("jumlah"),
                });
            }
            tabelbuku.setModel(tabel); // Menampilkan hasil pengurutan di JTable
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
          String idAnggota = tpencariananggota.getText().trim(); // Mengambil input dari JTextField

        if (idAnggota.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan masukkan ID Anggota untuk mencari.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            String sql = "SELECT * FROM tbanggota WHERE idanggota = '" + idAnggota + "'";
            Statement stat = con.createStatement();
            ResultSet rs = stat.executeQuery(sql);

            DefaultTableModel tabel = new DefaultTableModel();
            tabel.addColumn("ID Anggota");
            tabel.addColumn("Nama");
            tabel.addColumn("Alamat");
            tabel.addColumn("No Telepon");

            if (rs.next()) {
                // Menambahkan data hasil pencarian ke tabel
                tabel.addRow(new Object[]{
                    rs.getString("idanggota"),
                    rs.getString("nama"),
                    rs.getString("alamat"),
                    rs.getString("no_telepon")
                });
                tabelanggota.setModel(tabel); // Menampilkan hasil pencarian di JTable
            } else {
                JOptionPane.showMessageDialog(this, "Anggota dengan ID " + idAnggota + " tidak ditemukan.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                tampildataanggota(); // Menampilkan semua data jika tidak ada hasil
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
              // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tabelanggotaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelanggotaMouseClicked
          // Mendapatkan baris yang dipilih
        int row = tabelanggota.getSelectedRow();

        // Pastikan baris yang dipilih valid
        if (row != -1) {
            // Mengambil data dari baris yang dipilih
            String idAnggota = tabelanggota.getValueAt(row, 0).toString();
            String nama = tabelanggota.getValueAt(row, 1).toString();
    

            // Mengisi form anggota dengan data yang diambil
            TID.setText(idAnggota);
            TNAMA.setText(nama);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_tabelanggotaMouseClicked

    private void TIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TIDActionPerformed

    private void tabelbukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelbukuMouseClicked
            //    Mendapatkan baris yang dipilih
        int row = tabelbuku.getSelectedRow();

        // Pastikan baris yang dipilih valid
        if (row != -1) {
             // Mengambil nilai dari kolom "Jumlah"
        String jumlah = tabelbuku.getValueAt(row, 3).toString(); // Kolom 3 adalah "Jumlah"
                // Cek apakah jumlah sama dengan 0
           if (Integer.parseInt(jumlah) == 0) {
               JOptionPane.showMessageDialog(null, "Buku ini tidak tersedia sekarang. Silahkan pilih yang lain.");
               return; // Keluar dari metode jika jumlah 0
           }

            // Mengambil data dari baris yang dipilih
            String judul = tabelbuku.getValueAt(row, 1).toString();           
            String noRak = tabelbuku.getValueAt(row, 2).toString();
        

            // Mengisi form buku dengan data yang diambil       
            TBUKU.setText(judul);           
            TNORAK.setText(noRak);
           
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelbukuMouseClicked

    private void jDateChooser2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser2PropertyChange
         if (jDateChooser2.getDate() != null) {
            String pattern = "yyyy-MM-dd";
            SimpleDateFormat format = new SimpleDateFormat(pattern);
            tglpinjam = format.format(jDateChooser2.getDate());
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooser2PropertyChange

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
         if (jDateChooser1.getDate() != null) {
            String pattern = "yyyy-MM-dd";
            SimpleDateFormat format = new SimpleDateFormat(pattern);
            tglkembali = format.format(jDateChooser1.getDate());
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void TLAMAPINJAMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TLAMAPINJAMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TLAMAPINJAMActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        // Membuat instance dari FrameB
        Dashboard pindah = new Dashboard();

        // Menampilkan FrameB
        pindah.setVisible(true);

        // Menutup FrameA (frame saat ini)
        this.dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void THARGAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_THARGAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_THARGAActionPerformed

    private void TKODEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TKODEActionPerformed
                // TODO add your handling code here:
    }//GEN-LAST:event_TKODEActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        // Mengosongkan JTextField pencarian
        tpencariananggota.setText("");
        tpencarianbuku.setText("");

        // Menampilkan semua data buku di JTable
        tampildataanggota();
        tampildatabuku();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // Bersihkan komponen JTextField
        TID.setText("");
        TNAMA.setText("");
        TKODE.setText("");
        TBUKU.setText("");
        TNORAK.setText("");
        
        tampildataanggota();
        tampildataanggota();
        setkode();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // Memeriksa apakah ada field yang kosong
            if (TKODE.getText().isEmpty() || TID.getText().isEmpty() || TNAMA.getText().isEmpty() ||
                TBUKU.getText().isEmpty() || TNORAK.getText().isEmpty() || TLAMAPINJAM.getText().isEmpty() ||
                THARGA.getText().isEmpty()) {

                JOptionPane.showMessageDialog(rootPane, "Semua data harus diisi.");
                return; // Keluar dari metode jika ada field yang kosong
            }

            // Memeriksa apakah TDENDA kosong dan menetapkannya menjadi 0 jika benar
            String denda = TDENDA.getText().isEmpty() ? "0" : TDENDA.getText();

            // Membuat pernyataan SQL untuk insert data
            String sql = "INSERT INTO tbpeminjam VALUES ('" +
                    TKODE.getText() + "', '" +
                    TID.getText() + "', '" +
                    TNAMA.getText() + "', '" +
                    TBUKU.getText() + "', '" +
                    TNORAK.getText() + "', '" +
                    tglpinjam +  "', '" +
                    tglkembali +  "', '" +
                    TLAMAPINJAM.getText() + "', '" +
                    THARGA.getText() + "', '" +
                    denda + "')";

            // Membuat statement dan mengeksekusi pernyataan insert
            Statement stat = con.createStatement();
            stat.execute(sql);

            // Memperbarui kolom 'jumlah' di tbbuku dengan mengurangi 1
            String updateJumlahSQL = "UPDATE tbbuku SET jumlah = jumlah - 1 WHERE judul = '" + TBUKU.getText() + "'";
            int rowsUpdated = stat.executeUpdate(updateJumlahSQL);

            // Memeriksa apakah ada baris yang diperbarui
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(rootPane, "Data Peminjaman telah disimpan");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Data Peminjaman disimpan, tetapi jumlah buku tidak berhasil diperbarui");
            }

        } catch (Exception e) {
            // Menampilkan pesan kesalahan
            JOptionPane.showMessageDialog(rootPane, "Data gagal disimpan: " + e.getMessage());
        }
        // Refresh the member data display
        // Bersihkan komponen JTextField
        TID.setText("");
        TNAMA.setText("");
        TKODE.setText("");
        TBUKU.setText("");
        TNORAK.setText("");
        tampildataanggota();
        tampildatabuku();
        setkode();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // Membuat instance dari FrameB
        laporanpeminjaman pindah = new laporanpeminjaman();

        // Menampilkan FrameB
        pindah.setVisible(true);

        // Menutup FrameA (frame saat ini)
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formpeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formpeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formpeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formpeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formpeminjaman().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LAMAPINJAM;
    private javax.swing.JTextField TBUKU;
    private javax.swing.JTextField TDENDA;
    private javax.swing.JTextField THARGA;
    private javax.swing.JTextField TID;
    private javax.swing.JTextField TKODE;
    private javax.swing.JTextField TLAMAPINJAM;
    private javax.swing.JTextField TNAMA;
    private javax.swing.JTextField TNORAK;
    private javax.swing.JComboBox<String> curutkan;
    private javax.swing.JComboBox<String> curutkanbuku;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabelanggota;
    private javax.swing.JTable tabelbuku;
    private javax.swing.JTextField tpencariananggota;
    private javax.swing.JTextField tpencarianbuku;
    // End of variables declaration//GEN-END:variables

    private void tampildataanggota() {
       DefaultTableModel tabel = new DefaultTableModel();
      tabel.addColumn("ID Anggota");
      tabel.addColumn("Nama");
      tabel.addColumn("Alamat");
      tabel.addColumn("No Hp");
         try{
            sql="select * from tbanggota";
            stat=con.createStatement();
            rs=stat.executeQuery(sql);
                while (rs.next()) {
                tabel.addRow (new Object[]{
                    rs.getString("idanggota"),rs.getString(2),rs.getString(5),
                    rs.getString("no_telepon"),
                });
        tabelanggota.setModel(tabel);
        }
    } catch (Exception e){
    JOptionPane.showMessageDialog(null, "Error"+e);
    }

    }

    private void tampildatabuku() {
       DefaultTableModel tabel = new DefaultTableModel();
      tabel.addColumn("ID Buku");
      tabel.addColumn("Judul");
      tabel.addColumn("No rak");
      tabel.addColumn("Jumlah");
         try{
            sql="select * from tbbuku";
            stat=con.createStatement();
            rs=stat.executeQuery(sql);
                while (rs.next()) {
                tabel.addRow (new Object[]{
                    rs.getString("idbuku"),rs.getString(2),rs.getString(6),rs.getString(8),
                });
        tabelbuku.setModel(tabel);
        
        }
    } catch (Exception e){
    JOptionPane.showMessageDialog(null, "Error"+e);
    }
}

    private void setDateChoosers() {
        
        // Mengatur jDateChooser2 ke tanggal hari ini
        jDateChooser2.setDate(Calendar.getInstance().getTime());
        
        // Membuat jDateChooser2 tidak dapat diedit
        JTextComponent dateTextField2 = (JTextComponent) jDateChooser2.getDateEditor().getUiComponent();
        dateTextField2.setEditable(false); // Menonaktifkan edit manual

        // Menonaktifkan dialog kalender pada jDateChooser2
        jDateChooser2.getDateEditor().setEnabled(false); // Menonaktifkan editor
        jDateChooser2.setEnabled(false); // Menonaktifkan seluruh JDateChooser
        
        // Mengatur jDateChooser1 ke tanggal 7 hari dari hari ini
        Calendar calendar = Calendar.getInstance();
        calendar.add(Calendar.DAY_OF_MONTH, 8);
        jDateChooser1.setDate(calendar.getTime());

        // Mengatur tanggal minimum untuk jDateChooser1 (tidak boleh sebelum 7 hari dari hari ini)
        jDateChooser1.setMinSelectableDate(calendar.getTime());
    }

    private void setkode() {
    String sql = "SELECT kodepinjam FROM tbpeminjam ORDER BY kodepinjam DESC LIMIT 1";
    ResultSet rs = null;
    Statement stat = null;

    try {
        // Execute the query
        stat = con.createStatement(); // Assuming 'connection' is your valid database connection
        rs = stat.executeQuery(sql);

        // Default ID if no record exists in the table
        String idAnggotaBaru = "KDP001"; 

        if (rs.next()) {
            // Get the last ID and increment it
            String lastId = rs.getString("kodepinjam");
            int lastNumber = Integer.parseInt(lastId.substring(3)); // Extract number part
            lastNumber++; // Increment the number
            idAnggotaBaru = String.format("KDP%03d", lastNumber); // Format the new ID with leading zeros
        }

        // Set the new ID in the text field
        TKODE.setText(idAnggotaBaru);

    } catch (Exception e) {
        // Handle SQL exceptions
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error retrieving ID: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } 
    }
}

